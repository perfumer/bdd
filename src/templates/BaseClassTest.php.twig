<?php

namespace Generated\Tests\{{ class_builder.namespace }};

use PHPUnit\Framework\TestCase;

{% if class_builder.parentClass %}
abstract class {{ class_builder.className }}Test extends {{ class_builder.parentClass }}
{% else %}
abstract class {{ class_builder.className }}Test extends TestCase
{% endif %}
{
    final public function testSyntax()
    {
        new \ReflectionClass(\{{ class_builder.namespace }}\{{ class_builder.className }}::class);
    }
{% for method in class_builder.methods %}

    final public function test{{ method.name[:1]|upper ~ method.name[1:] }}LocalVariables()
    {
{% for variable, assert in method.testVariables %}
{% if assert == true %}
        $this->assertNotEmpty(${{ variable }});
{% else %}
        ${{ variable }} = true;
{% endif %}
{% endfor %}
    }
{% endfor %}
}
