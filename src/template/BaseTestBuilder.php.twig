<?php

namespace Generated\Tests\{{ context.namespace }};

{% if context.extendsTest %}
abstract class {{ context.className }}Test extends {{ context.extendsClass }}
{% else %}
abstract class {{ context.className }}Test extends \PHPUnit_Framework_TestCase
{% endif %}
{
    abstract public function getClassInstance();

{% for step in context.steps %}
{% if step.step.type in ['validator', 'formatter'] %}
    abstract public function {{ step.step.functionName }}DataProvider();

    /**
     * @dataProvider {{ step.step.functionName }}DataProvider
     */
    final public function test_{{ step.step.functionName }}({% if step.arguments %}{{ step.arguments|join(', ') }}, {% endif %}$result)
    {
        $_class_instance = $this->getClassInstance();

        $this->assertEquals($_class_instance->{{ step.step.functionName }}({{ step.arguments|join(', ') }}), $result);
    }

{% endif %}
{% endfor %}
}
