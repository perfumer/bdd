<?php

namespace Generated\{{ context.namespace }};

{% if context.extendsClass %}
abstract class {{ context.className }} extends {{ context.extendsClass }}
{% else %}
abstract class {{ context.className }}
{% endif %}
{
{% for variable in context.properties %}
    protected ${{ variable }};
{% endfor %}

{% for step in context.steps %}
{% if step.step.type in ['validator', 'formatter'] %}
    abstract public function {{ step.step.functionName }}({{ step.arguments|join(', ') }});
{% endif %}
{% if step.step.type == 'call' and step.step.service is null %}
    abstract protected function {{ step.step.functionName }}({{ step.arguments|join(', ') }});
{% endif %}
{% if step.step.type == 'call' and step.step.service is not null and step.step.service != '_parent' %}
    final private function {{ step.step.functionName }}({{ step.arguments|join(', ') }})
    {
        {% if step.step.return %}return {% endif %}$this->{{ step.step.service }}->{{ step.step.method }}({{ step.arguments|join(', ') }});
    }
{% endif %}
{% endfor %}

{% for action in context.actions %}
    final public function {{ action.methodName }}({{ action.methodArguments|join(', ') }})
    {
        $_error = null;
        $_return = null;
{% for variable_name, variable_value in action.localVariables %}
        {{ variable_name }} = {{ variable_value|default('null') }};
{% endfor %}

{% for step in action.steps %}
        if ($_error === null) {
{% if step.step.type == 'validator' %}
            $_error = $this->{{ step.step.functionName }}({{ step.arguments|join(', ') }});
{% elseif step.step.type == 'call' %}
{% if step.step.service == '_parent' %}
            {{ step.returnExpression }}parent::{{ action.methodName }}({{ step.arguments|join(', ') }});
{% else %}
            {{ step.returnExpression }}$this->{{ step.step.functionName }}({{ step.arguments|join(', ') }});
{% endif %}
{% elseif step.step.type == 'formatter' %}
            {{ step.returnExpression }}$this->{{ step.step.functionName }}({{ step.arguments|join(', ') }});
{% endif %}
        }
{% endfor %}

        if ($_error !== null) {
            return $_error;
        }

        return $_return;
    }

{% endfor %}
}
